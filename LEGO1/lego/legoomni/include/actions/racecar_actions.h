// This file was automatically generated by the actionheadergen tool.
// Please do not manually edit this file.
#ifndef RACECAR_ACTIONS_H
#define RACECAR_ACTIONS_H

/// \file racercar_actions.h
/// @brief [AI] Enumeration of Racecar script action identifiers for LEGO Island. Each value maps to a unique scriptable entity, bitmap, sound, or animation resource used in the Racecar (mechanic) building scene. Used for dispatch and object/script lookup. Generated by extracting action chunks from SI script files.
/// @details [AI] This file provides a centralized enum for all actions and resources available to the LEGO Island Racecar scene scripting system. Script IDs are referenced across various in-game components to control logic and resource loading (actors, controls, bitmaps, sounds, animations). Names and groupings often reveal entity/control/bitmap type and their purpose/order of appearance in SI scripts, making it crucial for resource management and event handling in the graphics and logic engine.

// [AI] Forward defines namespace for script/action IDs
namespace RacecarScript
{
#if __cplusplus >= 201103L
/// @enum Script
/// @brief [AI] Enum of identifiers for script actions and resources within the Racecar building/location context.
/// @details [AI] Actions are grouped (by numeric value) according to controls, views, sound cues, animations, texture states etc. Negative value is used for 'none' or invalid action.
/// Example: c_RaceCar_Actor (ID 4) references the main racecar actor for the garage scene; c_Yellow_Up_Bitmap (ID 74) is the resource handle for the bitmap of the yellow button "up" state. Used by resource loading and event scripting.
/// [AI] Sequence numbers reflect ordering or grouping in SI file resources or action hierarchy.
enum Script : int {
#else
/// @enum Script
/// @brief [AI] Enum of identifiers for script actions and resources within the Racecar building/location context (legacy C++98 version).
/// @details [AI] See above for grouping details.
enum Script {
#endif
	c_noneRacecar = -1, ///< @brief [AI] No/invalid Racecar script action; default/fallback/null object.

	c__StartUp = 0, ///< @brief [AI] Startup/init action for the Racecar script context. Should be first action executed.

	c_RaceCar_Actor = 4, ///< @brief [AI] Script action corresponding to the main interactive racecar actor.
	c_Info_Ctl = 5,      ///< @brief [AI] Button/control for info/help in the builder UI.
	c_Exit_Ctl = 6,      ///< @brief [AI] Control/button for exit/leave.
	c_ShelfUp_Ctl = 7,   ///< @brief [AI] Control for "shelf up" action (raising the part shelf).
	c_Platform_Ctl = 8,  ///< @brief [AI] Control for platform interaction (moving platform, etc.).

	// Bitmaps and additional controls
	c_Background = 64, ///< @brief [AI] Script resource for background bitmap or scene.
	c_ColorBook_Bitmap = 65, ///< @brief [AI] Bitmap for the color selection 'book'.
	c_ShelfUp_Up_Bitmap = 66, ///< @brief [AI] Bitmap asset for 'shelf up' button in 'up' (default) state.
	c_ShelfUp_Down_Bitmap = 67, ///< @brief [AI] Bitmap asset for 'shelf up' button in 'down' (pressed) state.
	c_PlatformUp_Bitmap = 68, ///< @brief [AI] Bitmap for the platform in raised 'up' position.
	c_PlatformLeft = 69, ///< @brief [AI] Action or resource for moving platform left.
	c_Rotate_Sound = 70, ///< @brief [AI] Sound resource for rotating animation/movement.
	c_PlatformLeft_Bitmap = 71, ///< @brief [AI] Bitmap for the platform in left position.
	c_Yellow_Ctl = 72, ///< @brief [AI] Control for yellow color selector.
	c_Yellow_Down_Bitmap = 73, ///< @brief [AI] Yellow button bitmap 'down'/pressed state.
	c_Yellow_Up_Bitmap = 74, ///< @brief [AI] Yellow button bitmap 'up'/default state.
	c_Red_Ctl = 75, ///< @brief [AI] Control for red color selector.
	c_Red_Down_Bitmap = 76, ///< @brief [AI] Red button bitmap 'down'/pressed state.
	c_Red_Up_Bitmap = 77, ///< @brief [AI] Red button bitmap 'up'/default state.
	c_Blue_Ctl = 78, ///< @brief [AI] Control for blue color selector.
	c_Blue_Down_Bitmap = 79, ///< @brief [AI] Blue button 'down' state.
	c_Blue_Up_Bitmap = 80, ///< @brief [AI] Blue button 'up' state.
	c_Green_Ctl = 81, ///< @brief [AI] Control for green color selector.
	c_Green_Down_Bitmap = 82, ///< @brief [AI] Green button 'down' state.
	c_Green_Up_Bitmap = 83, ///< @brief [AI] Green button 'up' state.
	c_Gray_Ctl = 84, ///< @brief [AI] Control for gray color selector.
	c_Gray_Down_Bitmap = 85, ///< @brief [AI] Gray button 'down' state.
	c_Gray_Up_Bitmap = 86, ///< @brief [AI] Gray button 'up' state.
	c_Black_Ctl = 87, ///< @brief [AI] Control for black color selector.
	c_Black_Down_Bitmap = 88, ///< @brief [AI] Black button 'down' state.
	c_Black_Up_Bitmap = 89, ///< @brief [AI] Black button 'up' state.

	// Decal controls and state/texture groups for Racecar parts (Front/Back/Tail)
	c_Decals_Ctl = 90, ///< @brief [AI] Decal control for customizing graphics on the car.
	c_RCFRNT_State_0 = 91, ///< @brief [AI] Front part: state 0 (base or plain).
	c_RCFRNT_State_0_Bitmap = 92, ///< @brief [AI] Bitmap for front, state 0.
	c_RCFRNT_State_1 = 93, ///< @brief [AI] Front part: state 1.
	c_RCFRNT_State_1_Bitmap = 94, ///< @brief [AI] Bitmap for front, state 1.
	c_RCFRNT_Texture_1 = 95, ///< @brief [AI] Texture for front, decal 1.
	c_RCFRNT_State_2 = 96,
	c_RCFRNT_State_2_Bitmap = 97,
	c_RCFRNT_Texture_2 = 98,
	c_RCFRNT_State_3 = 99,
	c_RCFRNT_State_3_Bitmap = 100,
	c_RCFRNT_Texture_3 = 101,
	c_RCFRNT_State_4 = 102,
	c_RCFRNT_State_4_Bitmap = 103,
	c_RCFRNT_Texture_4 = 104,
	c_Decals_Ctl1 = 105, ///< @brief [AI] Second decal control for further customization.

	// Rear part states and textures
	c_RCBACK_State_0 = 106,
	c_RCBACK_State_0_Bitmap = 107,
	c_RCBACK_State_1 = 108,
	c_RCBACK_State_1_Bitmap = 109,
	c_RCBACK_Texture_1 = 110,
	c_RCBACK_State_2 = 111,
	c_RCBACK_State_2_Bitmap = 112,
	c_RCBACK_Texture_2 = 113,
	c_RCBACK_State_3 = 114,
	c_RCBACK_State_3_Bitmap = 115,
	c_RCBACK_Texture_3 = 116,
	c_RCBACK_State_4 = 117,
	c_RCBACK_State_4_Bitmap = 118,
	c_RCBACK_Texture_4 = 119,
	c_Decals_Ctl2 = 120, ///< @brief [AI] Third decal control.

	// Tail part states and textures
	c_RCTAIL_State_0 = 121,
	c_RCTAIL_State_0_Bitmap = 122,
	c_RCTAIL_State_1 = 123,
	c_RCTAIL_State_1_Bitmap = 124,
	c_RCTAIL_Texture_1 = 125,
	c_RCTAIL_State_2 = 126,
	c_RCTAIL_State_2_Bitmap = 127,
	c_RCTAIL_Texture_2 = 128,
	c_RCTAIL_State_3 = 129,
	c_RCTAIL_State_3_Bitmap = 130,
	c_RCTAIL_Texture_3 = 131,
	c_RCTAIL_State_4 = 132,
	c_RCTAIL_State_4_Bitmap = 133,
	c_RCTAIL_Texture_4 = 134,

	// Info and exit button bitmaps (normal and pressed)
	c_Info_Up_Bitmap = 135, ///< @brief [AI] Info button 'up' bitmap.
	c_Info_Down_Bitmap = 136, ///< @brief [AI] Info button 'down' bitmap.
	c_Exit_Up_Bitmap = 137, ///< @brief [AI] Exit button 'up' bitmap.
	c_Exit_Down_Bitmap = 138, ///< @brief [AI] Exit button 'down' bitmap.

	// Sound cues
	c_Shelf_Sound = 139, ///< @brief [AI] Shelf move/interaction sound.
	c_PlaceBrick_Sound = 140, ///< @brief [AI] Place a brick sound.
	c_GetBrick_Sound = 141, ///< @brief [AI] Brick pickup sound.
	c_Paint_Sound = 142, ///< @brief [AI] Paint/apply color sound.
	c_Decal_Sound = 143, ///< @brief [AI] Decal application sound.

	// Build animations
	c_Build_Animation = 144, ///< @brief [AI] Main build animation cue.
	c_Build_Anim0 = 145,
	c_Build_Anim1 = 146,
	c_Build_Anim2 = 147,

	// Model and actor
	c_Rcuser_Model = 148, ///< @brief [AI] Main user (minifig/mechanic) model, if present.
	c_IRT001D1_Wav_500 = 149, ///< @brief [AI] Voice/speech cue (wav).
	c_IRT001D1_Pho_500 = 150, ///< @brief [AI] Phoneme track for matching speech (lip sync, etc).
	c_irt001d1_0_sfx = 151,   ///< @brief [AI] SFX event/line.
	c_irt001d1_1_sfx = 152,
	c_irt001d1_2_sfx = 153,
	c_irt001d1_3_sfx = 154,
	c_irt001d1_4_sfx = 155,
	c_irt001d1_5_sfx = 156,
	c_irt001d1_Anim = 157,    ///< @brief [AI] Animation for irt001d1.

	c_IRT002D1_Wav_501 = 158,
	c_IRT002D1_Pho_501 = 159,
	c_irt002d1_0_sfx = 160,
	c_irt002d1_1_sfx = 161,
	c_irt002d1_2_sfx = 162,
	c_irt002d1_Anim = 163,

	c_IRT003D1_Wav_502 = 164,
	c_IRT003D1_Pho_502 = 165,
	c_irt003d1_0_sfx = 166,
	c_irt003d1_1_sfx = 167,
	c_irt003d1_2_sfx = 168,
	c_irt003d1_3_sfx = 169,
	c_irt003d1_4_sfx = 170,
	c_irt003d1_5_sfx = 171,
	c_irt003d1_6_sfx = 172,
	c_irt003d1_7_sfx = 173,
	c_irt003d1_Anim = 174,

	c_IRT004D1_Wav_503 = 175,
	c_IRT004D1_Pho_503 = 176,
	c_irt004d1_0_sfx = 177,
	c_irt004d1_1_sfx = 178,
	c_irt004d1_2_sfx = 179,
	c_irt004d1_3_sfx = 180,
	c_irt004d1_4_sfx = 181,
	c_irt004d1_Anim = 182,

	c_IRTXX4D1_Wav_504 = 183,
	c_IRTXX4D1_Pho_504 = 184,
	c_irtxx4d1_0_sfx = 185,
	c_irtxx4d1_1_sfx = 186,
	c_irtxx4d1_2_sfx = 187,
	c_irtxx4d1_3_sfx = 188,
	c_irtxx4d1_4_sfx = 189,
	c_irtxx4d1_5_sfx = 190,
	c_irtxx4d1_6_sfx = 191,
	c_irtxx4d1_Anim = 192,

	c_IRT005D1_Wav_505 = 193,
	c_IRT005D1_Pho_505 = 194,
	c_irt005d1_0_sfx = 195,
	c_irt005d1_1_sfx = 196,
	c_irt005d1_2_sfx = 197,
	c_irt005d1_3_sfx = 198,
	c_irt005d1_4_sfx = 199,
	c_irt005d1_5_sfx = 200,
	c_irt005d1_6_sfx = 201,
	c_irt005d1_7_sfx = 202,
	c_irt005d1_8_sfx = 203,
	c_irt005d1_9_sfx = 204,
	c_irt005d1_10_sfx = 205,
	c_irt005d1_11_sfx = 206,
	c_irt005d1_12_sfx = 207,
	c_irt005d1_13_sfx = 208,
	c_irt005d1_Anim = 209,

	// Run animation actions for various actor IDs, used to trigger running animation state
	c_irt001d1_RunAnim = 500,
	c_irt002d1_RunAnim = 501,
	c_irt003d1_RunAnim = 502,
	c_irt004d1_RunAnim = 503,
	c_irtxx4d1_RunAnim = 504,
	c_irt005d1_RunAnim = 505
};
} // namespace RacecarScript

#endif // RACECAR_ACTIONS_H
